/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_move_free(a: number): void;
export function __wbg_get_move_origin(a: number): number;
export function __wbg_set_move_origin(a: number, b: number): void;
export function __wbg_get_move_target(a: number): number;
export function __wbg_set_move_target(a: number, b: number): void;
export function move_new_wasm(a: number, b: number): number;
export function move_delta(a: number): number;
export function __wbg_vector_free(a: number): void;
export function __wbg_get_vector_x(a: number): number;
export function __wbg_set_vector_x(a: number, b: number): void;
export function __wbg_get_vector_y(a: number): number;
export function __wbg_set_vector_y(a: number, b: number): void;
export function vector_new(a: number, b: number): number;
export function vector_to_canonic(a: number, b: number, c: number): number;
export function vector_normalized(a: number, b: number): number;
export function vector_vertical(a: number, b: number): void;
export function vector_multiplicity_of(a: number, b: number, c: number): void;
export function __wbg_canonicalvector_free(a: number): void;
export function __wbg_get_canonicalvector_x(a: number): number;
export function __wbg_set_canonicalvector_x(a: number, b: number): void;
export function __wbg_get_canonicalvector_y(a: number): number;
export function __wbg_set_canonicalvector_y(a: number, b: number): void;
export function canonicalvector_svg_points(a: number, b: number, c: number, d: number): void;
export function should_flip(a: number): number;
export function __wbg_piece_free(a: number): void;
export function __wbg_get_piece_typ(a: number): number;
export function __wbg_set_piece_typ(a: number, b: number): void;
export function __wbg_get_piece_position(a: number): number;
export function __wbg_set_piece_position(a: number, b: number): void;
export function __wbg_get_piece_color(a: number): number;
export function __wbg_set_piece_color(a: number, b: number): void;
export function piece_new(a: number, b: number, c: number): number;
export function __wbg_board_free(a: number): void;
export function board_piece_at(a: number, b: number): number;
export function board_new(): number;
export function __wbg_gamestate_free(a: number): void;
export function __wbg_get_gamestate_board(a: number): number;
export function __wbg_set_gamestate_board(a: number, b: number): void;
export function gamestate_new(): number;
export function gamestate_can_move(a: number, b: number, c: number): number;
export function gamestate_try_move(a: number, b: number, c: number, d: number): void;
export function gamestate_turn(a: number): number;
export function gamestate_current_color(a: number): number;
export function gamestate_status_code(a: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
